{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Searchbar/Searchbar.module.css","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/ImageGalleryItem/ImageGallertItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Searchbar/Searchbar.jsx","Components/Modal/Modal.jsx","App.jsx","service/service-api.jsx","helpers/mapper.jsx","index.js"],"names":["module","exports","Button","onClick","type","className","s","LoaderSpinner","style","Loader","color","height","width","timeout","ImageGalleryItem","webformatURL","largeImageURL","onOpenModal","imageGalleryItem","src","alt","imageGalleryItem__image","ImageGallery","images","imageGallery","map","image","key","id","SearchBar","onSubmit","useState","searchQuery","setQuery","Searchbar","SearchForm","e","preventDefault","trim","toast","error","SearchFormButton","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","modalRoot","document","querySelector","Modal","onClose","imageModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","App","page","setPage","setImages","largeImage","setLargeImage","isLoading","setIsLoading","showModal","setShowModal","isError","setIsError","axios","get","then","response","data","hits","API","prevImages","mapper","catch","finally","scrollTo","top","body","scrollHeight","behavior","modalClose","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97b42d7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem__image\":\"ImageGalleryItem_imageGalleryItem__image__1RGuz\",\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2vfth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3D8sj\",\"Modal\":\"Modal_Modal__MD7bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2_cO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3hYlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3GPo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2PESj\",\"SearchForm\":\"Searchbar_SearchForm__C-SxK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__XN6tC\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__5z_K5\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3sx2c\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired\r\n};","import Loader from 'react-loader-spinner';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport style from \"./Loader.module.css\";\r\n\r\nconst LoaderSpinner = () => (\r\n\t<div className={style.Loader}>\r\n        <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n            timeout={100000} />\r\n\t</div>\r\n);\r\n\r\nexport default LoaderSpinner;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  onOpenModal,\r\n}) => {\r\n    return (\r\n\r\n        <li className={style.imageGalleryItem}>\r\n          <img\r\n            src={webformatURL}\r\n            alt=\"\"\r\n            className={style.imageGalleryItem__image}\r\n            onClick={() => onOpenModal({ largeImageURL })}\r\n          />\r\n        </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from \"prop-types\";\r\nimport style from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGallertItem\";\r\n\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className={style.imageGallery}>\r\n       {images.map((image) => (\r\n         <ImageGalleryItem {...image} \r\n           key={image.id}\r\n           onOpenModal={onOpenModal} />\r\n         ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onOpenModal: PropTypes.func.isRequired\r\n};","import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction SearchBar ({onSubmit}) {\r\n\r\n  const [searchQuery, setQuery] = useState('');\r\n    \r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(searchQuery);\r\n\r\n    if (searchQuery.trim() === '') {\r\n      toast.error(\"Please enter the query of the request\");\r\n      return;\r\n    }\r\n    setQuery(\"\");\r\n  };\r\n\r\n\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n          </button>\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchQuery}\r\n            onChange={handleChange}\r\n          />        </form>\r\n      </header>\r\n    );\r\n}\r\n  \r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default SearchBar;","import PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport s from \"./Modal.module.css\";\r\n\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nfunction Modal({ onClose, imageModal }) {\r\n  \r\n  useEffect(() => {\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n\r\nconst handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n      <div className={s.Overlay} onClick={handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={imageModal} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  imageModal: PropTypes.string.isRequired,\r\n  };\r\n\r\nexport default Modal;\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport * as API from \"./service/service-api\";\nimport Button from \"./Components/Button/Button\";\nimport LoaderSpinner from \"./Components/Loader/Loader\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport Modal from \"./Components/Modal/Modal\";\nimport { mapper } from \"./helpers/mapper\";\nimport style from \"./App.css\";\n\n\n\nfunction App () {\n \n  const [searchQuery, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n\n    const getImages = () => {\n      if (!searchQuery) {\n        return;\n      }\n    setIsError(false);\n    setIsLoading(true);\n\n\n    API.getImages({ searchQuery, page })\n      .then((response) => {\n        setImages((prevImages) => \n          [...prevImages, ...mapper(response)],\n        );\n      })\n      .catch(error => {\n        setIsError(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n\n        if (page > 1) {\n          window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: \"smooth\",\n            });\n          }\n        });\n    };\n    getImages();\n  }, [page, searchQuery]);\n\n\n  const onChangeName = (searchQuery) => {\n    setQuery(searchQuery);\n    setPage(1);\n    setImages([]);\n    };\n  \nconst clickLoadMore = () => {\n    setIsLoading(true);\n    setPage((prevPage) => prevPage + 1);\n  };\n\nconst modalClose = () => {\n    setShowModal(!showModal);\n  };\n\nconst onClickLargeImage = (imageModal) => {\n    setLargeImage(imageModal);\n    modalClose();\n  };\n\n  return(\n      <div className={style.App}>\n        <Searchbar onSubmit={onChangeName} />\n        \n        {images.length !== 0 ? (\n          <ImageGallery images={images} onOpenModal={onClickLargeImage} />\n          ) : (\n          isError && <p>No found image</p> \n        )}\n        {isLoading && <LoaderSpinner />}\n        {images.length >= 12 && <Button onClick={clickLoadMore} />}\n        {showModal && (\n          <Modal\n            onClose={modalClose}\n            imageModal={largeImage.largeImageURL}\n          />\n        )}\n\n      </div>\n    );\n  }\n\nexport default App;\n","import axios from 'axios';\r\n\r\n\r\nconst apiKey = '23515062-7934c938ce0e5818a24acf627';\r\nconst baseUrl = 'https://pixabay.com/api/';\r\n\r\n\r\nexport const getImages = ({ searchQuery, page }) =>\r\n    axios\r\n        .get(`${baseUrl}?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then((response) => response.data.hits);","export const mapper = (images) => {\r\n\treturn images.map(({ id, largeImageURL, webformatURL}) => ({\r\n    id,\r\n    largeImageURL,\r\n    webformatURL,\r\n\t}));\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}